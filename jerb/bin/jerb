#!/usr/bin/python

# The Trampoline script for jerblib

import os
import sys
import jerblib as jb


def print_usage():
    """ Prints usage information to the user. """
    print(""" jerb example workflow:

    # 1. Create a new, empty jerb/git repository named "myname"
    jerb init <my_new_repo_name>

    # 2. Download and merge one or more .jerb files into this repository
    curl https://jerbcentral.org/jid/9832476701987984398342 -o jerbfile1.jerb
    # or more friendly
    curl https://jerbcentral.org/tag/ivar/helloworld -o jerbfile2.jerb
    jerb merge <jerbfile1.jerb> [jerbfile2.jerb ...]

    # 3. A) Hack away in this repo with your editor
    #    B) git add, git commit
    #    C) Hack some more
    #    D) git add, git commit

    # 4. Optional: update the repo's metadata to tag it with more information
    jerb metadata

    # 5. Create a jerb
    jerb jerb > mynewjerb.jerb

    # 6. Optional: Upload your jerb to jerbcentral.org to share it!
    curl -t PUT --payload mynewjerb.jerb https://jerbcentral.org/upload
    """)


def read_command_line_args():
    """ Reads in the arguments from the command line """
    op = sys.argv[1]
    if op == 'init':
        pass

    elif op == 'merge':
        jb.ensure_in_git_dir()
        jerbs = []
        for j in sys.argv[1:]:
            if not os.path.exists(j):
                jb.ragequit('Not a file: ' + j + "\n")
                jerbs.append(jb.load_jerb_from_file(j))
        for j in jerbs:
            jb.unpack_jerb(j)

    elif op == 'jerb':
        jb.ensure_in_git_dir()
        pk = jb.make_single_pack()
        ref = jb.get_master_ref()
        js = jb.make_jerbstring(pk, ref)
        print(js)

    elif op == 'help':
        print_usage()

    else:
        print_usage()
        exit(-1)

    exit(-1)
